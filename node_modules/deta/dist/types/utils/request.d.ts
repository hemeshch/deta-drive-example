interface RequestInit {
    payload?: any;
    headers?: {
        [key: string]: string;
    };
}
interface Request {
    body?: any;
    method?: string;
    baseURL?: string;
    headers?: {
        [key: string]: string;
    };
}
interface Response {
    status: number;
    response?: any;
    error?: Error;
}
export default class Requests {
    private requestConfig;
    constructor(projectKey: string, baseURL: string);
    put(uri: string, payload: any): Promise<Response>;
    delete(uri: string, payload?: any): Promise<Response>;
    get(uri: string): Promise<Response>;
    post(uri: string, init: RequestInit): Promise<Response>;
    patch(uri: string, payload?: any): Promise<Response>;
    static fetch(url: string, config: Request): Promise<Response>;
}
export {};
